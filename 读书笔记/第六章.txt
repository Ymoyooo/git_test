属性类型：
? [[Configurable]]：表示能否通过 delete 删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性修改为访问器属性。像前面例子中那样直接在对象上定义的属性，它们的这个特性默认值为 true。
? [[Enumerable]]：表示能否通过 for-in 循环返回属性。像前面例子中那样直接在对象上定义的属性，它们的这个特性默认值为 true。
? [[Writable]]：表示能否修改属性的值。像前面例子中那样直接在对象上定义的属性，它们的这个特性默认值为 true。
? [[Value]]：包含这个属性的数据值。读取属性值的时候，从这个位置读；写入属性值的时候，把新值保存在这个位置。这个特性的默认值为 undefined。

如果把writable:改成false，那么该对象是只读的。属性的值是不可修改的。

访问器属性
包含一对getter、setter函数，在读取访问器属性时，会调用getter函数，这个函数负责返回有效的值。在写入访问器属性时，会调用setter 函数并传入新值，这个函数负责决定如何处理数据。

? [[Configurable]]：表示能否通过 delete 删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性修改为数据属性。对于直接在对象上定义的属性，这个特性的默认值为true。
? [[Enumerable]]：表示能否通过 for-in 循环返回属性。对于直接在对象上定义的属性，这个特性的默认值为 true。
? [[Get]]：在读取属性时调用的函数。默认值为 undefined。
? [[Set]]：在写入属性时调用的函数。默认值为 undefined。
访问器属性不能直接定义，必须使用 Object.defineProperty()来定义。请看下面的例子。

读取函数的特性
Object.getOwnPropertyDescriptor()方法，可以取得给定属性的描述符。这个方法接收两个参数：属性所在的对象和要读取其描述符的属性名称。

工厂模式：抽象了创建具体对象的过程/

构造函数模式
这两个对象都有一个 constructor（构造函数）属性，该属性指向 Person 
person1.constructor==Person 返回true
同时也是object

二者的区别就在于
 后者没有显式的创建对象；
直接将属性和方法赋给了this对象。
没有return 语句。

